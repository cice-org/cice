name: cice-recognizer

on: ["push", "pull_request"]

env:
  CARGO_TERM_COLOR: always

jobs:
  recognizer-opencv:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Nightly Rust Toolchain
        run: rustup update nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install Opencv Dependencies
        run: script/dependency/opencv/install.sh
        shell: bash
      - name: Set environment variables (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "OPENCV_INCLUDE_PATHS=C:\tools\opencv\build\include" >> $GITHUB_ENV |
          echo "OPENCV_LINK_LIBS=opencv_world410" >> $GITHUB_ENV |
          echo "OPENCV_LINK_PATHS=C:\tools\opencv\build\x64\vc15\lib" >> $GITHUB_ENV
        shell: bash
      - name: Build
        run: cargo build -p cice-recognizer-opencv --verbose
      - name: Clippy
        run: cargo clippy -p cice-recognizer-opencv --verbose
      - name: Run tests
        run: cargo test -p cice-recognizer-opencv  --verbose
